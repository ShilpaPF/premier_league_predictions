#Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.impute import SimpleImputer
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.model_selection import GridSearchCV
import warnings
warnings.filterwarnings('ignore')
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Load the dataset
file_path = "/content/drive/MyDrive/Premier_League_Data.csv"
df = pd.read_csv(file_path)

# Create a mapping from numeric codes to actual team names
team_mapping = dict(enumerate(df['Team'].unique()))

# Convert Date to datetime
df['Date'] = pd.to_datetime(df['Date'], format='%d-%m-%Y')

# Feature engineering
df['Day_of_Week'] = df['Date'].dt.dayofweek
df['Month'] = df['Date'].dt.month
df['Year'] = df['Date'].dt.year
df['Goal_Difference'] = df['Goals For'] - df['Goals Against']
df['Goal_Ratio'] = df['Goals For'] / (df['Goals Against'] + 1)  # Add 1 to avoid division by zero
df['Shot_Accuracy'] = df['Shots on Target'] / df['Shots']
df['Expected_Goal_Difference'] = df['Expected Goals'] - df['Expected Goals Against']
# Display basic information about the dataset
print(df.info())
print(df.describe())

# Check for missing values
print(df.isnull().sum()
